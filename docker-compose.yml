version: '3.9'

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" # Porta de acesso à API do MinIO
      - "9001:9001" # Porta de acesso ao console do MinIO
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - ./data_minio:/data_minio # Mapeie o diretório local "data" para armazenar os arquivos no MinIO

  minio-mc:
    image: minio/mc:latest
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb myminio/landing &&
      mc mb myminio/bronze &&
      mc mb myminio/silver &&
      mc mb myminio/gold
      "

  mage:
    image: mageai/mageai:latest
    container_name: mage
    ports:
      - "6789:6789" # Porta de acesso ao Mage.ai
    volumes:
      - ./data_mage:/home/src # Mapeia o diretório local para o Mage.ai
      - ./.env:/home/src/.env # Mapeia o arquivo .env
      - ./requirements.txt:/home/src/requirements.txt # Mapeia o arquivo requirements.txt
    command: >
      sh -c "
      pip install -r /home/src/requirements.txt &&
      mage start --host 0.0.0.0
      "

  trino:
    image: trinodb/trino
    container_name: trino
    ports:
      - "8080:8080" # Porta para acessar o Trino
    depends_on:
      - minio
    volumes:
      - ./data_trino:/etc/trino # Mapeia um diretório local com configurações do Trino
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

  superset-db:
    image: postgres:13
    container_name: superset-db
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: superset
    volumes:
      - superset-db-data:/var/lib/postgresql/data

  superset:
    build:
      context: .
      dockerfile: ./data_superset/superset.Dockerfile
    container_name: superset
    environment:
      SUPERSET_CONFIG_PATH: /app/pythonpath/superset_config.py
      PYTHONPATH: /app/pythonpath
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: superset
      POSTGRES_HOST: superset-db
    volumes:
      - ./data_superset:/app/pythonpath
      - superset-data:/app/superset_home
    ports:
      - 8088:8088
    depends_on:
      - redis
      - superset-db
    entrypoint:
      - sh
      - -c
      - |
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin && \
        superset db upgrade && \
        superset init && \
        superset run --host 0.0.0.0 -p 8088 --with-threads --reload

volumes:
  superset-db-data:
  superset-data:
